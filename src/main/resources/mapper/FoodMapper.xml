<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.briup.restaurant.mapper.FoodMapper">
  <resultMap id="BaseResultMap" type="com.briup.restaurant.bean.Food">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="state" jdbcType="VARCHAR" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, price, type, state
  </sql>
  <select id="selectByExample" parameterType="com.briup.restaurant.bean.FoodExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from restaurant_food
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from restaurant_food
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from restaurant_food
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.briup.restaurant.bean.FoodExample">
    delete from restaurant_food
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.briup.restaurant.bean.Food">
    insert into restaurant_food (id, name, price, 
      type, state)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{type,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.briup.restaurant.bean.Food">
    insert into restaurant_food
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.briup.restaurant.bean.FoodExample" resultType="java.lang.Long">
    select count(*) from restaurant_food
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update restaurant_food
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update restaurant_food
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      type = #{record.type,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.briup.restaurant.bean.Food">
    update restaurant_food
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.briup.restaurant.bean.Food">
    update restaurant_food
    set name = #{name,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      type = #{type,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectBy" resultType="com.briup.restaurant.bean.Food">
   select * from restaurant_food
where type LIKE #{key1} and state LIKE #{key2}
and (type LIKE #{word} or state LIKE #{word} or name LiKE #{word})
  </select>

  <select id="selectSales" resultType="com.briup.restaurant.bean.ex.FoodSales">
    select restaurant_food.id foodId, restaurant_food.`name`,restaurant_food.type,count( * ) AS count
    from restaurant_food,restaurant_item,restaurant_order
    where (restaurant_food.id=restaurant_item.food_id
    AND restaurant_order.id=restaurant_item.order_id
    AND restaurant_item.state="已完成"
    AND restaurant_order.date>=#{date1}
    AND restaurant_order.date &lt;= #{date2}
    )
    GROUP BY restaurant_food.id
    ORDER BY count DESC
  </select>


  <select id="selectAll" resultType="com.briup.restaurant.bean.ex.FoodSales">
    select restaurant_food.id foodId, restaurant_food.`name`,restaurant_food.type,count( * ) AS count
    from restaurant_food,restaurant_item,restaurant_order
    where (restaurant_food.id=restaurant_item.food_id
    AND restaurant_order.id=restaurant_item.order_id
    AND restaurant_item.state="已完成"
    )
    GROUP BY restaurant_food.id
    ORDER BY count DESC
  </select>

  <select id="selectAfter" resultType="com.briup.restaurant.bean.ex.FoodSales">
    select restaurant_food.id foodId, restaurant_food.`name`,restaurant_food.type,count( * ) AS count
    from restaurant_food,restaurant_item,restaurant_order
    where (restaurant_food.id=restaurant_item.food_id
    AND restaurant_order.id=restaurant_item.order_id
    AND restaurant_item.state="已完成"
    AND restaurant_order.date>=#{date1}
    )
    GROUP BY restaurant_food.id
    ORDER BY count DESC
  </select>


  <select id="selectBefore" resultType="com.briup.restaurant.bean.ex.FoodSales">
    select restaurant_food.id foodId, restaurant_food.`name`,restaurant_food.type,count( * ) AS count
    from restaurant_food,restaurant_item,restaurant_order
    where (restaurant_food.id=restaurant_item.food_id
    AND restaurant_order.id=restaurant_item.order_id
    AND restaurant_item.state="已完成"
     AND restaurant_order.date &lt;= #{date2}
    )
    GROUP BY restaurant_food.id
    ORDER BY count DESC
  </select>

  <select id="selectMonth" resultType="com.briup.restaurant.bean.ex.FoodSales">
     select restaurant_food.id foodId, restaurant_food.`name`,restaurant_food.type,count( * ) AS count
    from restaurant_food,restaurant_item,restaurant_order
    where (restaurant_food.id=restaurant_item.food_id
    AND restaurant_order.id=restaurant_item.order_id
    AND restaurant_item.state="已完成"
and year(restaurant_order.date)=#{year}
and month(restaurant_order.date)=#{month}
    )
    GROUP BY restaurant_food.id
    ORDER BY count DESC
		LIMIT 5
  </select>

</mapper>